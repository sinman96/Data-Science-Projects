# -*- coding: utf-8 -*-
"""apriori.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1obZCkNvZUFwOrgErnR4wyiBj3ZCfyGZD

# Apriori

## Importing the libraries
"""
#!pip install apyori
import pandas as pd

"""## Data Preprocessing"""

dataset = pd.read_csv('Market_Basket_Optimisation.csv', header = None)

def MyAprioriModel(data_set, sample_size):
    transactions = []
    for i in range(0, 7501):
        transactions.append([str(data_set.values[i,j]) for j in range(0, sample_size)])
    """## Training the Apriori model on the dataset"""
    from apyori import apriori
    rules = apriori(transactions = transactions, min_support = 0.003, min_confidence = 0.2, min_lift = 3, min_length = 2, max_length = 2)

    """## Visualising the results
    ### Displaying the first results coming directly from the output of the apriori function
    """
    results = list(rules)
    print(results)
    """### Putting the results well organised into a Pandas DataFrame"""
    resultsinDataFrame = pd.DataFrame(inspect(results), columns = ['Left Hand Side', 'Right Hand Side', 'Support', 'Confidence', 'Lift'])
    """### Displaying the results non sorted"""
    print(resultsinDataFrame)
    """### Displaying the results sorted by descending lifts"""
    return resultsinDataFrame.nlargest(n = 10, columns = 'Lift')

def inspect(results):
    lhs         = [tuple(result[2][0][0])[0] for result in results]
    rhs         = [tuple(result[2][0][1])[0] for result in results]
    supports    = [result[1] for result in results]
    confidences = [result[2][0][2] for result in results]
    lifts       = [result[2][0][3] for result in results]
    #support is the proportion of entries that exhibit an amount of shared relationships/ amount of total points
    #confidence is likelihood, given a data point having property A it has property B
    #lift is improvement from support to confidence
    return list(zip(lhs, rhs, supports, confidences, lifts))